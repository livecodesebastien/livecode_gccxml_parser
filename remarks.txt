Difficult to know find the matching type of a named type:
1)  - script: property PrintPageRectangle
        [definition] => Rectangle
        [kind] => named type

    - native: function MCPrintingGetPrintPageRectangle
        [name] => MCRectangle
        [kind] => named type
-----------------------
2)  - script: property PrintDeviceOutput
        [definition] => PrinterDeviceOutput
        [kind] => named type

    - native: function MCPrintingGetPrintDeviceOutput        [name] => MCPrintingPrinterDeviceOutput        [kind] => named type

In the 1st case, the native name is MC<property>
In the 2nd case, the native name is MC<module><property>

How to check whether two named types match then?
-> for now, I consider two types match in both of the cases.

Issue actually extends to all the definitions which don't include the module name - so also the opaque definitions in the Interface modules 

********

In the enum definition, how should the name of a constant element be defined? The spec is not really clear about that, it only reads "my_other_enum_tag = 20" for a constant element's name.
Shall I just check whether one of the enum element has the value targeted?
-> that's what I do for now

********

Opaque type:
Have you got any example on the simple and derived representation of an opaque?

For the encode and decode functions: the second parameter, according to the doc, must be:
    - void MC<module><name>Encode(MCExecContext& ctxt, MC<module><name>Rep rep, MC<module><name>& r_value, MCExecErrorInfo*& r_error);
but I rather found, in the example:
    - void MCPrintingPrinterDeviceOutputEncode(MCExecContext& ctxt, MCPrintingPrinterDeviceOutputRep rep, MCPrintingPrinterDeviceOutput& value, MCExecErrorInfo*& r_error);

Which of those is the correct one?

*********

Corrections in the example given:
    - PrinterOrientation should be PrinterPageOrientation (or the opposite)
    - enum MCPrintingPrinterLinkType is missing in C++ header file
    - boolean MCPrintingPrinterBookmarkInitialStateType missing in C++ header file
    - there is no struct such as MCExecErrorInfo