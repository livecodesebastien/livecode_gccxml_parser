About the optional parameters:
    When the optional parameter is an array, is there something like
1)      kind => pointer type
        type => 
            kind => named type
            name => MCArrayRef

2)      kind => named type
        name => MCArrayRef

In the example, the 2nd solution appears

************************

The functions PrintLink and MCPrintingExecPrintLink are completely different:

    command PrintLink(in type is PrinterLinkType, in area is Rectangle)

    void MCPrintingExecPrintLink(MCExecContext& ctxt, int type, MCStringRef target, MCRectangle area);